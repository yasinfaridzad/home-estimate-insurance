from line 229 - 299 

const handleFeedback = async (isCorrect: boolean, correctName?: string) => {
    if (!feedbackItem) return

    try {
      // Save feedback and training data
      const feedbackResponse = await fetch('/api/items/feedback', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          itemId: feedbackItem.id,
          isCorrect,
          correctName,
          imageData: feedbackItem.imageData,
          detectedName: feedbackItem.name,
          confidence: feedbackItem.confidence,
        }),
      })

      if (!feedbackResponse.ok) {
        throw new Error('Failed to save feedback')
      }

      // Save training data when user corrects or confirms an item
      if (isCorrect || correctName) {
        const trainingResponse = await fetch('/api/training', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            itemName: isCorrect ? feedbackItem.name : correctName,
            imageData: feedbackItem.imageData,
            bbox: feedbackItem.bbox,
            confidence: feedbackItem.confidence,
            detectedAs: feedbackItem.name,
          }),
        })

        if (!trainingResponse.ok) {
          console.error('Failed to save training data')
        }
      }

      // Create the confirmed item
      const confirmedItem = isCorrect 
        ? { ...feedbackItem, confidence: 1.0 }
        : correctName 
          ? { ...feedbackItem, name: correctName, confidence: 1.0 }
          : null

      // Add to confirmed items if valid
      if (confirmedItem) {
        setConfirmedItems(prev => [...prev, confirmedItem])
      }

      // Update the detected items list and show next item for feedback
      setDetectedItems(prev => {
        const remainingItems = prev.filter(i => i.id !== feedbackItem.id)
        if (remainingItems.length > 0) {
          setFeedbackItem(remainingItems[0])
        } else {
          setFeedbackItem(null)
        }
        return remainingItems
      })
    } catch (error) {
      console.error('Error handling feedback:', error)
    }
  }